/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package paneles;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import static java.lang.Thread.sleep;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import static paneles.DemoReaderFile.readFile;

/**
 *
 * @author bouafia
 */
public class pnlpreparation extends javax.swing.JPanel {
    
    /**
     * Creates new form pnlhome
     */
    public pnlpreparation() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel21 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Edit = new javax.swing.JTextArea();
        sync = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1140, 670));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sentiment_analysis/images/209.png"))); // NOI18N
        jLabel21.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel21.setPreferredSize(new java.awt.Dimension(100, 100));
        jLabel21.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel21MouseMoved(evt);
            }
        });
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel21MouseExited(evt);
            }
        });
        add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 230, 220));

        jPanel1.setBackground(new java.awt.Color(110, 89, 222));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setFont(new java.awt.Font("Nimbus Roman No9 L", 0, 18)); // NOI18N
        jLabel18.setForeground(java.awt.Color.white);
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sentiment_analysis/images/969265-128.png"))); // NOI18N
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 10, -1, 110));

        jLabel19.setFont(new java.awt.Font("Nimbus Roman No9 L", 0, 48)); // NOI18N
        jLabel19.setForeground(java.awt.Color.white);
        jLabel19.setText("Prepare the environment________");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, 70));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 900, 130));

        jLabel27.setBackground(new java.awt.Color(54, 33, 89));
        jLabel27.setFont(new java.awt.Font("Nimbus Roman No9 L", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(54, 33, 89));
        jLabel27.setText("Prepare the environment");
        add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 440, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setText("Active services the paltform _____________________________________________");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, -1));

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel2.setBackground(new java.awt.Color(142, 59, 145));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Cluster  Hadoop Yarn");
        jPanel7.add(jLabel2);

        jPanel2.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 170, 30));

        jLabel3.setFont(new java.awt.Font("Tibetan Machine Uni", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Service");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 170, 40));

        jLabel4.setFont(new java.awt.Font("Tibetan Machine Uni", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Action");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, 120, 40));

        jLabel5.setFont(new java.awt.Font("Tibetan Machine Uni", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Pids");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 90, 120, 40));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 590, 10));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel2.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 90, 10, 30));

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel2.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 10, 30));

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel8.setBackground(new java.awt.Color(142, 59, 145));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Cluster Hadoop HDFS");
        jPanel8.add(jLabel8);

        jPanel2.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 170, 30));

        jButton3.setText("Start");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 130, 90, -1));

        jLabel6.setFont(new java.awt.Font("Tibetan Machine Uni", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Port(x)");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 90, 120, 40));

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel2.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, 10, 30));

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, 120, 30));

        jLabel9.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, 120, 30));

        jLabel10.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 170, 120, 30));

        jLabel11.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 170, 120, 30));

        jButton4.setText("Start");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 250, 90, -1));

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel12.setBackground(new java.awt.Color(142, 59, 145));
        jLabel12.setText("Cluster elasticsearch");
        jPanel9.add(jLabel12);

        jPanel2.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 170, 30));

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel13.setBackground(new java.awt.Color(142, 59, 145));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Cluster Spark");
        jPanel10.add(jLabel13);

        jPanel2.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, 170, 30));

        jButton5.setText("Start");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 210, 90, -1));

        jLabel14.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 210, 120, 30));

        jLabel15.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, 120, 30));

        jLabel16.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 250, 120, 30));

        jLabel17.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 250, 120, 30));

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel22.setBackground(new java.awt.Color(142, 59, 145));
        jLabel22.setText("DashBoard kibana");
        jPanel12.add(jLabel22);

        jPanel2.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 170, 30));

        jButton7.setText("Start");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 290, 90, -1));

        jLabel23.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 290, 120, 30));

        jLabel24.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 290, 120, 30));

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 330, 120, 30));

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 330, 120, 30));

        Edit.setColumns(20);
        Edit.setRows(5);
        jScrollPane1.setViewportView(Edit);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 610, 170));

        sync.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sentiment_analysis/images/sync-1.png"))); // NOI18N
        sync.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sync.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                syncMouseMoved(evt);
            }
        });
        sync.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                syncMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                syncMouseExited(evt);
            }
        });
        jPanel2.add(sync, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 70, 70, 60));

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 900, 540));
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void jLabel21MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel21MouseMoved

    private void jLabel21MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel21MouseExited

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(jButton3.getText()=="Start"){
            try {
                Process proc = Runtime.getRuntime().exec("sh /home/bouafia/script_project/start_hadoop_cluster.sh"); //Whatever you want to execute
                jButton3.setText("Stop");
                try{
                    sleep(35000);
                }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                }
                try {
                    Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/load_hadoopstatus.sh"); //Whatever you want to execute
                    try{
                        sleep(20000);
                    }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                    }
                    String NameNode = readFile("/home/bouafia/script_project/NameNodeStatus.txt");
                    if(NameNode.contentEquals("true")){
                        jButton3.setText("Stop");
                        jLabel9.setText("50070");
                        jLabel10.setText("8050");
                        jPanel7.setBackground(new Color(51,196,37));
                        jPanel8.setBackground(new Color(51,196,37));
                        Edit.append("NameNode Status is Active"+"\n"+"ResourceManager Status is Active"+"\n");
                    }else if(NameNode.contentEquals("false")){
                        jButton3.setText("Start");
                        jLabel9.setText("");
                        jLabel10.setText("");
                        jPanel7.setBackground(new Color(253,245,86));
                        jPanel8.setBackground(new Color(253,245,86));
                        Edit.append("NameNode Status is Not Active"+"\n"+"ResourceManager Status is Not Active"+"\n");
                    }
                    String NameNodePid = readFile("/home/bouafia/script_project/NameNodePid.txt");
                    jLabel7.setText(NameNodePid);
                    String ResourceManagerPid = readFile("/home/bouafia/script_project/ResourceManagerPid.txt");
                    jLabel11.setText(ResourceManagerPid);
            
                } catch (IOException e) {
                    System.out.println(e.getMessage());
                }
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }else if(jButton3.getText()=="Stop"){
            try {    
                Process proc = Runtime.getRuntime().exec("sh /home/bouafia/script_project/stop_hadoop_cluster.sh"); //Whatever you want to execute
                jButton3.setText("Start");
                try{
                    sleep(35000);
                }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                }
                try {
                    Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/load_hadoopstatus.sh"); //Whatever you want to execute
                    try{
                        sleep(20000);
                    }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                    }
                    String NameNode = readFile("/home/bouafia/script_project/NameNodeStatus.txt");
                    if(NameNode.contentEquals("true")){
                        jButton3.setText("Stop");
                        jLabel9.setText("50070");
                        jLabel10.setText("8050");
                        jPanel7.setBackground(new Color(51,196,37));
                        jPanel8.setBackground(new Color(51,196,37));
                        Edit.append("NameNode Status is Active"+"\n"+"ResourceManager Status is Active"+"\n");
                    }else if(NameNode.contentEquals("false")){
                        jButton3.setText("Start");
                        jLabel9.setText("");
                        jLabel10.setText("");
                        jPanel7.setBackground(new Color(253,245,86));
                        jPanel8.setBackground(new Color(253,245,86));
                        Edit.append("NameNode Status is Not Active"+"\n"+"ResourceManager Status is Not Active"+"\n");
                    }
                    String NameNodePid = readFile("/home/bouafia/script_project/NameNodePid.txt");
                    jLabel7.setText(NameNodePid);
                    String ResourceManagerPid = readFile("/home/bouafia/script_project/ResourceManagerPid.txt");
                    jLabel11.setText(ResourceManagerPid);
            
                } catch (IOException e) {
                    System.out.println(e.getMessage());
                }
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }  
        } 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(jButton4.getText()=="Start"){
            try {
                Process proc = Runtime.getRuntime().exec("sh /home/bouafia/script_project/start_elastic_cluster.sh"); //Whatever you want to execute
                jButton4.setText("Stop");
                try{
                    sleep(10000);
                }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                }
                try {
                    Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/load_elasticstatus.sh"); //Whatever you want to execute
                    try{
                        sleep(20000);
                    }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                    }
                    String elasticsearch = readFile("/home/bouafia/script_project/ElasticsearchStatus.txt");
                    if(elasticsearch.contentEquals("true")){
                        jButton4.setText("Stop");
                        jLabel16.setText("9200");
                        jPanel9.setBackground(new Color(51,196,37));
                        Edit.append("Elasticsearch Status is Active"+"\n");
                    }else if(elasticsearch.contentEquals("false")){
                        jButton4.setText("Start");
                        jLabel16.setText("");
                        jPanel9.setBackground(new Color(253,245,86));
                        Edit.append("Elasticsearch Status is Not Active"+"\n");
                    }
                    String elasticsearchpid = readFile("/home/bouafia/script_project/ElasticsearchPid.txt");
                    jLabel17.setText(elasticsearchpid);
            
                } catch (IOException e) {
                    System.out.println(e.getMessage());
                }
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }else if(jButton4.getText()=="Stop"){
            try {    
                Process proc = Runtime.getRuntime().exec("sh /home/bouafia/script_project/stop_elastic_cluster.sh"); //Whatever you want to execute
                jButton4.setText("Start");
                try{
                    sleep(6000);
                }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                }
                try {
                    Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/load_elasticstatus.sh"); //Whatever you want to execute
                    try{
                        sleep(20000);
                    }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                    }
                    String elasticsearch = readFile("/home/bouafia/script_project/ElasticsearchStatus.txt");
                    if(elasticsearch.contentEquals("true")){
                        jButton4.setText("Stop");
                        jLabel16.setText("5601");
                        jPanel9.setBackground(new Color(51,196,37));
                        Edit.append("Elasticsearch Status is Active"+"\n");
                    }else if(elasticsearch.contentEquals("false")){
                        jButton4.setText("Start");
                        jLabel16.setText("");
                        jPanel9.setBackground(new Color(253,245,86));
                        Edit.append("elasticsearch status is Not Active"+"\n");
                    }
                    String elasticsearchpid = readFile("/home/bouafia/script_project/ElasticsearchPid.txt");
                    jLabel17.setText(elasticsearchpid);
            
                } catch (IOException e) {
                    System.out.println(e.getMessage());
                }
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }  
        }
    }                                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        try {
            Process proc = Runtime.getRuntime().exec("sh /home/bouafia/script_project/load_status.sh"); //Whatever you want to execute
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if(jButton5.getText()=="Start"){
            try {
                Process proc = Runtime.getRuntime().exec("sh /home/bouafia/script_project/start_spark_cluster.sh"); //Whatever you want to execute
                jButton5.setText("Stop");
                try{
                    sleep(10000);
                }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                }
                try {
                    Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/load_sparkstatus.sh"); //Whatever you want to execute
                    try{
                        sleep(20000);
                    }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                    }
                    String spark = readFile("/home/bouafia/script_project/MasterStatus.txt");
                    if(spark.contentEquals("true")){
                        jButton5.setText("Stop");
                        jLabel15.setText("7077");
                        jPanel10.setBackground(new Color(51,196,37));
                        Edit.append("Spark Status is Active"+"\n");
                    }else if(spark.contentEquals("false")){
                        jButton5.setText("Start");
                        jLabel15.setText("");
                        jPanel10.setBackground(new Color(253,245,86));
                        Edit.append("Spark Status is Not Active"+"\n");
                    }
                    String sparkpid = readFile("/home/bouafia/script_project/MasterPid.txt");
                    jLabel14.setText(sparkpid);
            
                } catch (IOException e) {
                    System.out.println(e.getMessage());
                }
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }else if(jButton5.getText()=="Stop"){
            try {    
                Process proc = Runtime.getRuntime().exec("sh /home/bouafia/script_project/stop_spark_cluster.sh"); //Whatever you want to execute
                jButton5.setText("Start");
                try{
                    sleep(10000);
                }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                }
                try {
                    Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/load_sparkstatus.sh"); //Whatever you want to execute
                    try{
                        sleep(20000);
                    }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                    }
                    String spark = readFile("/home/bouafia/script_project/MasterStatus.txt");
                    if(spark.contentEquals("true")){
                        jButton5.setText("Stop");
                        jLabel15.setText("7077");
                        jPanel10.setBackground(new Color(51,196,37));
                        Edit.append("Spark Status is Active"+"\n");
                    }else if(spark.contentEquals("false")){
                        jButton5.setText("Start");
                        jLabel15.setText("");
                        jPanel10.setBackground(new Color(253,245,86));
                        Edit.append("spark status is Not Active"+"\n");
                    }
                    String sparkpid = readFile("/home/bouafia/script_project/MasterPid.txt");
                    jLabel14.setText(sparkpid);
            
                } catch (IOException e) {
                    System.out.println(e.getMessage());
                }
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }  
        }        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if(jButton7.getText()=="Start"){
            try {
                Process proc = Runtime.getRuntime().exec("sh /home/bouafia/script_project/start_kibana.sh"); //Whatever you want to execute
                jButton7.setText("Stop");
                try{
                    sleep(2000);
                }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                }
                try {
                    Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/load_kibanastatus.sh"); //Whatever you want to execute
                    try{
                        sleep(10000);
                    }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                    }
                    String kibana = readFile("/home/bouafia/script_project/KibanaStatus.txt");
                    if(kibana.contentEquals("true")){
                        jButton7.setText("Stop");
                        jLabel24.setText("5601");
                        jPanel12.setBackground(new Color(51,196,37));
                        Edit.append("kibana is Active"+"\n");
                    }else if(kibana.contentEquals("false")){
                        jButton7.setText("Start");
                        jLabel24.setText("");
                        jPanel12.setBackground(new Color(253,245,86));
                        Edit.append("kibana is Not Active"+"\n");
                    }
                    String kibanapid = readFile("/home/bouafia/script_project/KibanaPid.txt");
                    jLabel23.setText(kibanapid);
            
                } catch (IOException e) {
                    System.out.println(e.getMessage());
                }
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }else if(jButton7.getText()=="Stop"){
            try {    
                Process proc = Runtime.getRuntime().exec("sh /home/bouafia/script_project/stop_kibana.sh"); //Whatever you want to execute
                jButton7.setText("Start");
                try{
                    sleep(2000);
                }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                }
                try {
                    Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/load_kibanastatus.sh"); //Whatever you want to execute
                    try{
                        sleep(10000);
                    }catch (InterruptedException ex) {
                        Thread.currentThread().interrupt();
                    }
                    String kibana = readFile("/home/bouafia/script_project/KibanaStatus.txt");
                    if(kibana.contentEquals("true")){
                        jButton7.setText("Stop");
                        jLabel24.setText("5601");
                        jPanel12.setBackground(new Color(51,196,37));
                        Edit.append("kibana is Active"+"\n");
                    }else if(kibana.contentEquals("false")){
                        jButton7.setText("Start");
                        jLabel24.setText("");
                        jPanel12.setBackground(new Color(253,245,86));
                        Edit.append("kibana is Not Active"+"\n");
                    }
                    String kibanapid = readFile("/home/bouafia/script_project/KibanaPid.txt");
                    jLabel23.setText(kibanapid);
            
                } catch (IOException e) {
                    System.out.println(e.getMessage());
                }
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }  
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void syncMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_syncMouseClicked
        try {
            Process proc = Runtime.getRuntime().exec("sh /home/bouafia/script_project/load_status.sh"); //Whatever you want to execute
            try{
                sleep(20000);
            }catch (InterruptedException ex) {
                Thread.currentThread().interrupt();
            }
            String kibana = readFile("/home/bouafia/script_project/KibanaStatus.txt");
            if(kibana.contentEquals("true")){
                jButton7.setText("Stop");
                jLabel24.setText("5601");
                jPanel12.setBackground(new Color(51,196,37));
                Edit.append("kibana is Active"+"\n");
            }else if(kibana.contentEquals("false")){
                jButton7.setText("Start");
                jLabel24.setText("");
                jPanel12.setBackground(new Color(253,245,86));
                Edit.append("kibana is Not Active"+"\n");
            }
            String kibanapid = readFile("/home/bouafia/script_project/KibanaPid.txt");
            jLabel23.setText(kibanapid);
            //###################################################################
            
            String elasticsearch = readFile("/home/bouafia/script_project/ElasticsearchStatus.txt");
            if(elasticsearch.contentEquals("true")){
                jButton4.setText("Stop");
                jLabel16.setText("9200");
                jPanel9.setBackground(new Color(51,196,37));
                Edit.append("Elasticsearch Status is Active"+"\n");
            }else if(elasticsearch.contentEquals("false")){
                jButton4.setText("Start");
                jLabel16.setText("");
                jPanel9.setBackground(new Color(253,245,86));
                Edit.append("Elasticsearch Status is Not Active"+"\n");
            }
            String elasticsearchpid = readFile("/home/bouafia/script_project/ElasticsearchPid.txt");
            jLabel17.setText(elasticsearchpid);
            //###################################################################
            String spark = readFile("/home/bouafia/script_project/MasterStatus.txt");
            if(spark.contentEquals("true")){
                jButton5.setText("Stop");
                jLabel15.setText("7077");
                jPanel10.setBackground(new Color(51,196,37));
                Edit.append("Spark Status is Active"+"\n");
            }else if(spark.contentEquals("false")){
                jButton5.setText("Start");
                jLabel15.setText("");
                jPanel10.setBackground(new Color(253,245,86));
                Edit.append("Spark Status is Not Active"+"\n");
            }
            String sparkpid = readFile("/home/bouafia/script_project/MasterPid.txt");
            jLabel14.setText(sparkpid);
            //###################################################################
            String NameNode = readFile("/home/bouafia/script_project/NameNodeStatus.txt");
            if(NameNode.contentEquals("true")){
                jButton3.setText("Stop");
                jLabel9.setText("50070");
                jLabel10.setText("8050");
                jPanel7.setBackground(new Color(51,196,37));
                jPanel8.setBackground(new Color(51,196,37));
                Edit.append("NameNode Status is Active"+"\n"+"ResourceManager Status is Active"+"\n");
            }else if(NameNode.contentEquals("false")){
                jButton3.setText("Start");
                jLabel9.setText("");
                jLabel10.setText("");
                jPanel7.setBackground(new Color(253,245,86));
                jPanel8.setBackground(new Color(253,245,86));
                Edit.append("NameNode Status Not Active"+"\n"+"ResourceManager Status Not Active"+"\n");
            }
            String NameNodePid = readFile("/home/bouafia/script_project/NameNodePid.txt");
            jLabel7.setText(NameNodePid);
            String ResourceManagerPid = readFile("/home/bouafia/script_project/ResourceManagerPid.txt");
            jLabel11.setText(ResourceManagerPid);
            
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_syncMouseClicked

    private void syncMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_syncMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_syncMouseMoved

    private void syncMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_syncMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_syncMouseExited

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        try {
            Process proc = Runtime.getRuntime().exec("sh /home/bouafia/script_project/start_tunel_hadoop.sh"); //Whatever you want to execute
            String url = "http://localhost:50071";
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
        } catch (IOException e) {
            Logger.getLogger(pnlpreparation.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        try {
            Process proc = Runtime.getRuntime().exec("sh /home/bouafia/script_project/start_tunel_elastic.sh"); //Whatever you want to execute
            String url = "http://localhost:9201";
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
        } catch (IOException e) {
            Logger.getLogger(pnlpreparation.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
        try {
            Process proc = Runtime.getRuntime().exec("sh /home/bouafia/script_project/start_tunel_kibana.sh"); //Whatever you want to execute
            String url = "http://localhost:5602";
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
        } catch (IOException e) {
            Logger.getLogger(pnlpreparation.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_jLabel24MouseClicked
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Edit;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel sync;
    // End of variables declaration//GEN-END:variables

    
}
