/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package paneles;

import java.awt.Color;
import java.io.*;
import static java.lang.Thread.sleep;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JFileChooser;
import static paneles.DemoReaderFile.readFile;

/**
 *
 * @author bouafia
 */
public class pnlAnalysis extends javax.swing.JPanel {

    /**
     * Creates new form pnlhome
     */
    static int milliseconds = 0;
    static int seconds = 0;
    static int minutes = 0;
    static int hours = 0;
    static String load_dataset ="";
    static String remove_nalph ="";
    static String stop_word ="";
    static String lemm_word ="";
    static String featurize ="";
    static String arraycv ="";
    static String bestcv ="";
    static String paramcv ="";
    static String accuracy ="";
    static String metric ="";
    static String savemodel ="";
    static String fin ="";
    static int d1=0, d2=0, d3=0, d4=0, d5=0, d6=0, d7=0, d8=0, d9=0, d10=0, d11=0, d12=0;
    static boolean state = true;
    static int counter1=0;
    static int counter2=0;
    static double TP = 0.0;
    static double FN = 0.0;
    static double FP = 0.0;
    static double TN = 0.0;
    static double ReCall = 0.0;
    static double Precision = 0.0;
    static double F_Measure = 0.0;
    static String com = "";
    
    public static void write(String s, File f) throws IOException{
        FileWriter fw = new FileWriter(f);
        fw.write(s);
        fw.close();
    }
    public pnlAnalysis() {
        initComponents();
        jPanel10.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        hour = new javax.swing.JLabel();
        minute = new javax.swing.JLabel();
        second = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1140, 670));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(110, 89, 222));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setFont(new java.awt.Font("Nimbus Roman No9 L", 0, 18)); // NOI18N
        jLabel18.setForeground(java.awt.Color.white);
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sentiment_analysis/images/2890564-128_1.png"))); // NOI18N
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 0, -1, 130));

        jLabel19.setFont(new java.awt.Font("Nimbus Roman No9 L", 0, 48)); // NOI18N
        jLabel19.setForeground(java.awt.Color.white);
        jLabel19.setText("ML model creation_____________");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, 70));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 900, 130));

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sentiment_analysis/images/210.png"))); // NOI18N
        jLabel22.setPreferredSize(new java.awt.Dimension(100, 100));
        jLabel22.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel22MouseMoved(evt);
            }
        });
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel22MouseExited(evt);
            }
        });
        add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 230, 220));

        jLabel26.setBackground(new java.awt.Color(54, 33, 89));
        jLabel26.setFont(new java.awt.Font("Nimbus Roman No9 L", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(54, 33, 89));
        jLabel26.setText("ML model creation");
        add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("ML Name Model");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 130, -1, 20));

        jComboBox1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DecesionTree_En", "LogisticRegression_En", "SVM_En", "RandomForest_En", "NaiveBayes_En", "OneVsRest_En", "DecesionTree_Ar", "LogisticRegression_Ar", "SVM_Ar", "RandomForest_Ar", "NaiveBayes_Ar", "OneVsRest_Ar" }));
        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, 230, 30));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 10, 460));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 190, 220, 20));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 130, 10, 60));

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 10, 60));
        add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 190, 240, 20));
        add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 190, 380, 20));

        jButton1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton1.setText("File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 150, 70, 30));

        jTextField1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, 300, 30));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(250, 5, 5));
        jLabel2.setText("Model Evaluation_____");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 420, -1, 30));

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setText("DataSet");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 130, -1, 20));

        jTextField2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 150, 220, 30));

        jButton2.setText("Create ML Model");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 570, 160, 40));
        add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 420, 880, 10));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 450, 710, 210));

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel4.setText("ML Program");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, -1, 20));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sentiment_analysis/images/database.png"))); // NOI18N
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 70));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Feature");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 100, -1));

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Vectors");
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 100, -1));

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 260, 100, 110));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Lower Cased");
        jPanel3.add(jLabel8);

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 290, 100, -1));

        jLabel10.setText("Lemm Words");
        jPanel4.add(jLabel10);

        add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 330, 100, -1));

        jLabel11.setText("Load DataSet");
        jPanel5.add(jLabel11);

        add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 100, -1));

        jLabel12.setText("Featurized");
        jPanel6.add(jLabel12);

        add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 330, 100, -1));

        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sentiment_analysis/images/database.png"))); // NOI18N
        jPanel7.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 5, -1, -1));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Raw Wrods");
        jPanel7.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 100, -1));

        add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 260, 100, 110));

        jLabel16.setText("Stop Words");
        jPanel8.add(jLabel16);

        add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 290, 100, -1));

        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sentiment_analysis/images/database.png"))); // NOI18N
        jPanel9.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 5, -1, -1));

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText(" Wrods");
        jPanel9.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 100, 20));

        add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 260, 100, 110));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(246, 13, 16), 2, true));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Model ");
        jLabel15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel7.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Saved");

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 270, 180, 90));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(13, 32, 246), 2, true));

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Tockenizer");
        jLabel23.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 200, 140, -1));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(13, 32, 246), 2, true));

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("HashingTF");
        jLabel24.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 200, 140, -1));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(246, 13, 16), 2, true));

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Model Training");
        jLabel25.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 200, 150, -1));

        jLabel27.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 0, 0));
        jLabel27.setText("Training Pipeline_____");
        add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, -1, -1));

        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 620, 160, 40));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        hour.setFont(new java.awt.Font("Ubuntu Condensed", 1, 40)); // NOI18N
        hour.setForeground(new java.awt.Color(0, 55, 255));
        hour.setText("00:");

        minute.setFont(new java.awt.Font("Ubuntu Condensed", 1, 40)); // NOI18N
        minute.setForeground(new java.awt.Color(0, 55, 255));
        minute.setText("00:");

        second.setFont(new java.awt.Font("Ubuntu Condensed", 1, 40)); // NOI18N
        second.setForeground(new java.awt.Color(0, 55, 255));
        second.setText("00");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(hour)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minute)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(second, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hour)
                    .addComponent(minute)
                    .addComponent(second))
                .addGap(0, 3, Short.MAX_VALUE))
        );

        add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 490, 160, 50));

        jLabel9.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Elapsed time");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 452, 160, 30));

        jSeparator8.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 130, 10, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel22MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseMoved
    }//GEN-LAST:event_jLabel22MouseMoved

    private void jLabel22MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseExited
    }//GEN-LAST:event_jLabel22MouseExited

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        jTextField1.setText(filename);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        state =true;
        jPanel14.setBackground(new Color(141,244,156));
        Thread t = new Thread(){
            public void run(){
                for(;;){
                    if(state==true){
                        try{
                            sleep(1);
                            if(milliseconds >=1000){
                                milliseconds=0;
                                seconds++;
                            }
                            if(seconds >=60){
                                milliseconds=0;
                                seconds=0;
                                minutes++;
                            }
                            if(minutes >=60){
                                milliseconds=0;
                                seconds=0;                                
                                minutes=0;
                                hours++;
                            }
                            milliseconds++;
                            second.setText(""+seconds);
                            minute.setText(minutes+": ");
                            hour.setText(hours+": ");
                        }catch (Exception e){
                            
                        }
                    }
                    else{
                        break;
                    }
                }
            }
        };
        t.start();
        try{
            File f1 = new File("/home/bouafia/script_project/ML/send/namemodel.txt");
            write(jTextField2.getText(),f1);
            File f2 = new File("/home/bouafia/script_project/ML/send/dataset.txt");
            write("hdfs://master:9000"+jTextField1.getText(),f2);
        }catch (IOException e){
            
        }
        
        try {           
            Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/RemoteText.sh");
            } catch (IOException e) {
            System.out.println(e.getMessage());
        }
        Timer timer = new Timer();
        counter1=0;
        TimerTask task = new TimerTask(){
            @Override
            public void run(){
                counter1++;
                if(jComboBox1.getSelectedIndex()==0){
                    try {
                        Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/DecesionTree.sh");                        
                    } catch (IOException e) {
                        System.out.println(e.getMessage());
                    }
                    jLabel15.setText("DecesionTreeModel");
                    jTextArea1.append(String.valueOf("Start "+jComboBox1.getSelectedItem())+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    com = "DT-";
                }
                if(jComboBox1.getSelectedIndex()==1){
                    try {
                        Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/LogisticRegression.sh");    
                    } catch (IOException e) {
                        System.out.println(e.getMessage());
                    }
                    jLabel15.setText("LogisticRegressionModel");
                    jTextArea1.append(String.valueOf("Start "+jComboBox1.getSelectedItem())+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    com = "LR-";
                }
                if(jComboBox1.getSelectedIndex()==2){
                    try {
                        Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/SVM.sh");            
                    } catch (IOException e) {
                        System.out.println(e.getMessage());
                    }
                    jLabel15.setText("SVMModel");
                    jTextArea1.append(String.valueOf("Start "+jComboBox1.getSelectedItem())+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    com = "SVM-";
                }
                if(jComboBox1.getSelectedIndex()==3){
                    try {
                        Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/RandomForest.sh");            
                    } catch (IOException e) {
                        System.out.println(e.getMessage());
                    }
                    jLabel15.setText("RandomForestModel");
                    jTextArea1.append(String.valueOf("Start "+jComboBox1.getSelectedItem())+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    com = "RF-";
                }
                if(jComboBox1.getSelectedIndex()==4){
                    try {
                        Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/NaiveBayes.sh");            
                    } catch (IOException e) {
                        System.out.println(e.getMessage());
                    }
                    jLabel15.setText("NaiveBayesModel");
                    jTextArea1.append(String.valueOf("Start "+jComboBox1.getSelectedItem())+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    com = "NB-";
                }
                if(jComboBox1.getSelectedIndex()==5){
                    try {
                        Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/OneVsRest.sh");            
                    } catch (IOException e) {
                        System.out.println(e.getMessage());
                    }
                    jLabel15.setText("OneVsRestModel");
                    jTextArea1.append(String.valueOf("Start "+jComboBox1.getSelectedItem())+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    com = "OVR-";
                }
                if(jComboBox1.getSelectedIndex()==6){
                    try {
                        Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/DecesionTreeAr.sh");            
                    } catch (IOException e) {
                        System.out.println(e.getMessage());
                    }
                    jLabel15.setText("DecesionTreeModel");
                    jTextArea1.append(String.valueOf("Start "+jComboBox1.getSelectedItem())+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    com = "ADT-";
                }
                if(jComboBox1.getSelectedIndex()==7){
                    try {
                        Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/LogisticRegressionAr.sh");            
                    } catch (IOException e) {
                        System.out.println(e.getMessage());
                    }
                    jLabel15.setText("LogisticRegressionModel");
                    jTextArea1.append(String.valueOf("Start "+jComboBox1.getSelectedItem())+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    com = "ALR-";
                }        
                if(jComboBox1.getSelectedIndex()==8){
                    try {
                        Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/SVMAr.sh");            
                    } catch (IOException e) {
                        System.out.println(e.getMessage());
                    }
                    jLabel15.setText("SVMModel");
                    jTextArea1.append(String.valueOf("Start "+jComboBox1.getSelectedItem())+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    com = "ASVM-";
                }
                if(jComboBox1.getSelectedIndex()==9){
                    try {
                        Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/RandomForestAr.sh");            
                    } catch (IOException e) {
                        System.out.println(e.getMessage());
                    }
                    jLabel15.setText("RandomForesModel");
                    jTextArea1.append(String.valueOf("Start "+jComboBox1.getSelectedItem())+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    com = "ARF-";
                }
                if(jComboBox1.getSelectedIndex()==10){
                    try {
                        Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/NaiveBayesAr.sh");            
                    } catch (IOException e) {
                        System.out.println(e.getMessage());
                    }
                    jLabel15.setText("NaiveBayesModel");
                    jTextArea1.append(String.valueOf("Start "+jComboBox1.getSelectedItem())+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    com = "ANB-";
                }
                if(jComboBox1.getSelectedIndex()==11){
                    try {
                        Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/OneVsRestAr.sh");            
                    } catch (IOException e) {
                        System.out.println(e.getMessage());
                    }
                    jLabel15.setText("OneVsRestModel");
                    jTextArea1.append(String.valueOf("Start "+jComboBox1.getSelectedItem())+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    com = "AOVR-";
                }
                if(counter1==1){
                    timer.cancel();
                }
            }
        };
        timer.scheduleAtFixedRate(task, 20000, 60000);
        Timer timer1 = new Timer();
 
        TimerTask task1 = new TimerTask(){
            @Override
            public void run(){
                try{
                    Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/load_result.sh"); 
                    } catch (IOException e) {
                    System.out.println(e.getMessage());
                }
            }
        };
        timer1.scheduleAtFixedRate(task1, 40000, 60000);
        Timer timer2 = new Timer();
 
        TimerTask task2 = new TimerTask(){
            @Override
            public void run(){
                load_dataset = readFile("/home/bouafia/script_project/ML/receive/load_dataset.txt");
                if(load_dataset.equalsIgnoreCase("true") && d1==0){
                    jPanel5.setBackground(new Color(51,196,37));
                    jPanel7.setBackground(new Color(51,196,37));
                    jTextArea1.append("End of Load_dataset "+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    d1=1;
                }
                remove_nalph = readFile("/home/bouafia/script_project/ML/receive/remove_nalph.txt");
                if(remove_nalph.equalsIgnoreCase("true") && d2==0){
                    jPanel3.setBackground(new Color(51,196,37));
                    jTextArea1.append("End of Lower case "+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    d2=1;
                }
                stop_word = readFile("/home/bouafia/script_project/ML/receive/stop_word.txt");
                if(stop_word.equalsIgnoreCase("true") && d3==0){
                    jPanel8.setBackground(new Color(51,196,37));
                    jTextArea1.append("End of Stop words "+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    d3=1;
                }
                lemm_word = readFile("/home/bouafia/script_project/ML/receive/lemm_word.txt");                
                if(lemm_word.equalsIgnoreCase("true") && d4==0){
                    jPanel4.setBackground(new Color(51,196,37));
                    jPanel9.setBackground(new Color(51,196,37));
                    jTextArea1.append("End of Lemma words "+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    d4=1;
                }
                featurize = readFile("/home/bouafia/script_project/ML/receive/featurize.txt");
                if(featurize.equalsIgnoreCase("true") && d5==0){
                    jPanel6.setBackground(new Color(51,196,37));
                    jPanel2.setBackground(new Color(51,196,37));
                    jTextArea1.append("End of Featurize "+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    d5=1;
                }
                arraycv = readFile("/home/bouafia/script_project/ML/receive/arraycv.txt");
                if(!arraycv.equalsIgnoreCase("") && d6==0){
                    jTextArea1.append("Cross Validation = "+arraycv+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    d6=1;
                }
                bestcv = readFile("/home/bouafia/script_project/ML/receive/bestcv.txt");
                if(!bestcv.equalsIgnoreCase("") && d7==0){
                    jTextArea1.append("The best Cross Validation = "+bestcv+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    d7=1;
                }
                paramcv = readFile("/home/bouafia/script_project/ML/receive/paramcv.txt");
                if(!paramcv.equalsIgnoreCase("") && d8==0){
                    jTextArea1.append(paramcv.replace("\n", "").replace("{", "").replace("}", "").replaceAll("\\s", " ")+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    d8=1;
                }
                accuracy = readFile("/home/bouafia/script_project/ML/receive/accuracy.txt");
                if(!accuracy.equalsIgnoreCase("") && d9==0){
                    jTextArea1.append(accuracy+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    d9=1;
                }
                metric = readFile("/home/bouafia/script_project/ML/receive/metric.txt");
                if(!metric.equalsIgnoreCase("") && d10==0){
                    String[] m = metric.replace("0 ", "0,").replace(" ", "").split(",");                    
                    jTextArea1.append("Metric = TP : "+m[0]+" , FN : "+m[1]+"\n");
                    jTextArea1.append("         FP : "+m[2]+" , TN : "+m[3]+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    TP = Double.valueOf(m[0]);
                    FN = Double.valueOf(m[1]);
                    FP = Double.valueOf(m[2]);
                    TN = Double.valueOf(m[3]);
                    ReCall = TP/(TP+FN);
                    Precision = TP/(TP+FP);
                    F_Measure = 2*ReCall*Precision/(ReCall+Precision);
                    jTextArea1.append("ReCall    = "+String.valueOf(ReCall)+"\n");
                    jTextArea1.append("Precision = "+String.valueOf(Precision)+"\n");
                    jTextArea1.append("F-Measure = "+String.valueOf(F_Measure)+"\n");
                    d10=1;
                }
                savemodel = readFile("/home/bouafia/script_project/ML/receive/savemodel.txt");
                if(savemodel.equalsIgnoreCase("true") && d11==0){
                    String models ="\n"+com+jTextField2.getText()+"-"+String.valueOf(F_Measure).substring(0,4);
                    jLabel28.setText(models);
                    try{
                        File f3 = new File("/home/bouafia/script_project/ML/send/listmodel.txt");
                        FileWriter fw1 = new FileWriter(f3, true);
                        fw1.write(models);
                        fw1.close();                                                
                    }catch (IOException e){
                         System.out.print("salut");
                    }
                    jPanel10.setVisible(true);
                    d11=1;
                }
                fin = readFile("/home/bouafia/script_project/ML/receive/fin.txt");
                if(fin.equalsIgnoreCase("true") && d12==0){
                    state = false;
                    jTextArea1.append("Save Model "+jTextField2.getText()+"     At : "+hour.getText()+minute.getText()+second.getText()+"\n");
                    d12=1;
                    timer1.cancel();
                    timer2.cancel();                    
                }
            }
        };
        timer2.scheduleAtFixedRate(task2, 60000, 60000);                    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jPanel14.setBackground(new Color(255,255,255));
        state=false;        
        jTextArea1.setText("");
        jPanel10.setVisible(false);
        jPanel2.setBackground(new Color(242,241,240));
        jPanel3.setBackground(new Color(242,241,240));
        jPanel4.setBackground(new Color(242,241,240));
        jPanel5.setBackground(new Color(242,241,240));
        jPanel6.setBackground(new Color(242,241,240));
        jPanel7.setBackground(new Color(242,241,240));
        jPanel8.setBackground(new Color(242,241,240));
        jPanel9.setBackground(new Color(242,241,240));
        jTextField1.setText("");
        jTextField2.setText("");
        jComboBox1.setSelectedIndex(0);
        hour.setText("00:");
        minute.setText("00:");
        second.setText("00");
        try {           
            Process proc1 = Runtime.getRuntime().exec("sh /home/bouafia/script_project/ML/Removeproc.sh");
            } catch (IOException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel hour;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel minute;
    private javax.swing.JLabel second;
    // End of variables declaration//GEN-END:variables
}
